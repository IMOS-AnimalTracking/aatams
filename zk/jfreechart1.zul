<zk>
<style>
img {
cursor:default;
}
.icon {
cursor:pointer;
}
div.chart {
display:block;
width:700px;
height:270px;
/*overflow:hidden;*/
}
</style>
<div class="chart">	
  <imagemap id="myimage">
  	<attribute name="onClick"><![CDATA[
  		if (event.getArea() != null) {
  			alert(self.getFellow(event.getArea()).getTooltiptext());
  		}
  	]]></attribute>
  </imagemap>
  </div>
  <zscript><![CDATA[
import org.zkoss.image.AImage;
import org.jfree.chart.*;
import org.jfree.chart.encoders.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.XYItemEntity;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RectangleInsets;
import java.io.ByteArrayOutputStream;
import java.awt.image.BufferedImage;
import java.awt.Rectangle;
import java.awt.Color;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.DateTickUnitType;
import java.text.SimpleDateFormat;


XYSeries series1 = new XYSeries("Series 1");
XYSeries series2 = new XYSeries("Series 2");
long time = System.currentTimeMillis();
for(long x = 0; x<1000000; x+=60000){
	series1.add(time + x, 3.0);
	series2.add(time + x, 7.0);
}
XYSeriesCollection dataset = new XYSeriesCollection();
dataset.addSeries(series1);
dataset.addSeries(series2);

JFreeChart chart = ChartFactory.createXYLineChart(
        "",
        "",
        "",
        dataset,
        PlotOrientation.VERTICAL,
        false,
        false,
        false
    );
chart.setPadding(new RectangleInsets(0,0,0,0));
XYPlot plot = (XYPlot) chart.getPlot();
plot.setBackgroundPaint(new Color(238,238,209));
plot.setRangeGridlinesVisible(false);
plot.setDomainGridlinePaint(Color.GRAY);
DateAxis xAxis = new DateAxis();
xAxis.setTickUnit(new DateTickUnit(DateTickUnitType.MINUTE,5));
plot.setDomainAxis(xAxis);
XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
renderer.setSeriesShape(0,new Rectangle(3,10));
renderer.setSeriesShape(1,new Rectangle(3,10));
renderer.setSeriesLinesVisible(0, true);
renderer.setSeriesShapesVisible(0, true);
renderer.setSeriesLinesVisible(1, false);
renderer.setSeriesShapesVisible(1, true);        
plot.setRenderer(renderer);

ChartRenderingInfo info = new ChartRenderingInfo();
BufferedImage bi = chart.createBufferedImage(2000, 300, BufferedImage.TRANSLUCENT , info);
SimpleDateFormat formatter = new SimpleDateFormat("yyy/MM/dd HH:mm:ss"); 

for(Iterator it=info.getEntityCollection().getEntities().iterator();it.hasNext();) {
	ChartEntity ce = ( ChartEntity ) it.next();
	if (ce instanceof XYItemEntity) {
		Area area = new Area();
		area.setParent(myimage);
	 	area.setCoords(ce.getShapeCoords());
	 	area.setShape(ce.getShapeType());
	 	XYItemEntity ie = (XYItemEntity)ce;
	    area.setId(myimage.getId()+'_'+ie.getSeriesIndex()+'_'+ie.getItem());
	    area.setTooltiptext(formatter.format(ie.getDataset().getXValue(ie.getSeriesIndex(),ie.getItem())) + "," +
	    		            String.valueOf(ie.getDataset().getYValue(ie.getSeriesIndex(),ie.getItem())));
	 }
}

byte[] bytes = EncoderUtil.encode(bi, ImageFormat.PNG, true);

AImage image = new AImage("Pie Chart", bytes);
myimage.setContent(image);
myimage.setSclass("imagemap");
myimage.setDraggable("false");
  ]]></zscript>
</zk>
